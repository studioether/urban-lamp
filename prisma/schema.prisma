generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                 Int        @id @default(autoincrement())
  username           String     @unique
  email              String     @unique
  password           String     @unique
  createdAt          DateTime   @default(now())
  hashedRefreshToken String?    @unique
  responses          Comments[]
  reviews            Review[]   @relation("UserPosts")
  downvotedReviews   Review[]   @relation("UserDownvotedReviews")
  bookmarks          Review[]   @relation("UserReviewBookmarks")
  upvotedReviews     Review[]   @relation("UserUpvotedReviews")
}

model Review {
  id           Int        @id @default(autoincrement())
  content      String
  authorId     Int?
  upvotes      Int        @default(0)
  downvotes    Int        @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  title        String     @default("")
  bookmarks    Int        @default(0)
  comments     Comments[]
  author       User?      @relation("UserPosts", fields: [authorId], references: [id])
  downvotedBy  User[]     @relation("UserDownvotedReviews")
  bookmarkedBy User[]     @relation("UserReviewBookmarks")
  upvotedBy    User[]     @relation("UserUpvotedReviews")
}

model Comments {
  id        Int      @id @default(autoincrement())
  reviewId  Int
  authorId  Int?
  createdAt DateTime @default(now())
  comment   String
  author    User?    @relation(fields: [authorId], references: [id])
  review    Review   @relation(fields: [reviewId], references: [id])
}
